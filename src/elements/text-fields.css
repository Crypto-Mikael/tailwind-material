.md-input {
  background: transparent;
  @apply
  outline-none placeholder-on-surface 
  border border-outline
  text-on-surface
  focus:border-primary
  invalid:text-error
  invalid:border-error
  disabled:border-outline/[0.12]
  disabled:text-on-surface/[0.12]
  rounded 
  leading-6 
  pl-4 py-2 pr-10
  block;
}

.md-input[type="date"] {
  @apply pr-2;
}


select.md-input {
  background-image:
    linear-gradient(45deg, transparent 50%, rgb(var(--md-sys-color-outline)) 50%),
    linear-gradient(135deg, rgb(var(--md-sys-color-outline)) 50%, transparent 50%);  
    background-position:
    calc(100% - 20px) calc(1em + 2px),
    calc(100% - 15px) calc(1em + 2px),
    100% 0;
  background-size:
    5px 5px,
    5px 5px,
    1px 1.5em;
  background-repeat: no-repeat;

  margin: 0;      
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
  appearance: none;
  -webkit-appearance: none;
  -moz-appearance: none;
}

select.md-input:focus {
  background-image:
    linear-gradient(45deg, rgb(var(--md-sys-color-outline)) 50%, transparent 50%),
    linear-gradient(135deg, transparent 50%, rgb(var(--md-sys-color-outline)) 50%);
  background-position:
    calc(100% - 15px) 1em,
    calc(100% - 20px) 1em,
    100% 0;
  background-size:
    5px 5px,
    5px 5px,
    1px 1.5em;
  background-repeat: no-repeat;
}


.md-input-filled {
  @apply 
  outline-none placeholder-on-surface 
  border-b border-b-outline
  bg-surface-variant 
  text-on-surface-variant
  focus:border-primary
  invalid:text-error
  invalid:border-error
  disabled:border-outline/[0.12]
  disabled:text-on-surface/[0.12] 
  leading-6 
  pl-4 py-2
  block;
}

.md-input-filled + .md-floating-label {
  background: linear-gradient(0deg, transparent 0%, transparent 33%, rgb(var(--md-sys-color-surface-variant)) 34%, rgb(var(--md-sys-color-surface-variant)) 38%, transparent 37%, transparent 100%);
}

.md-input:has(+ .md-floating-label) {
  @apply
  placeholder-opacity-0
  placeholder-shown:focus:placeholder-opacity-100;
}

.md-input.ng-touched.ng-invalid {
  @apply border-error;
}

.md-input.ng-touched.ng-invalid + .md-floating-label {
  @apply text-error;
}

.md-input:not(:placeholder-shown) + .md-floating-label {
  background: linear-gradient(0deg, transparent 0%, transparent 33%, rgb(var(--md-sys-color-surface-variant)) 34%, rgb(var(--md-sys-color-surface-variant)) 40%, transparent 41%, transparent 100%);
}

.md-input:focus + .md-floating-label {
  background: linear-gradient(0deg, transparent 0%, transparent 33%, rgb(var(--md-sys-color-surface-variant)) 34%, rgb(var(--md-sys-color-surface-variant)) 40%, transparent 41%, transparent 100%);
}

.md-input-wrapper {
  @apply relative max-w-full;
}

.md-input-wrapper > .md-input {
  @apply w-full;
}
.md-input-wrapper > .md-input-filled {
  @apply w-full;
}

.md-floating-label {
  @apply
  absolute
  text-sm
  transition-all
  pointer-events-none
  left-2 px-2
  -top-3 peer-placeholder-shown:top-2 peer-focus:-top-3
  peer-focus:text-primary
  peer-focus:text-sm
  peer-disabled:text-on-surface/[0.12]
  peer-invalid:text-error
  peer-placeholder-shown:text-base;
}

.md-input-left-icon {
  @apply md-icon-button absolute left-0 ml-1;
}

.md-input-right-icon {
  @apply md-icon-button absolute top-0 right-0;
}

.md-input-wrapper:has(.md-input-left-icon) {
  .md-input {
    @apply pl-11;
  }
  .md-input-filled {
    @apply pl-11;
  }
  .md-floating-label {
    @apply left-[38px];
  }
}

.md-input:required + .md-floating-label::after {
  content: '*';
}

.md-input.ng-invalid + .md-floating-label::after {
  content: '*';
}

.md-input {
  option {
    background: rgb(var(--md-sys-color-surface));
  }
}
